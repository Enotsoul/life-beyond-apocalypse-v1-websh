function allShowAndHide() {
	var buttons = ["#showItems","#showSkillsMercenary","#showSkillsTechnician","#showSkillsMedic","#showSkillsSurvivor","#showSkillsZombie"];
	var contentDivs = ["#items","#skillsMercenary","#skillsTechnician","#skillsMedic","#skillsSurvivor","#skillsZombie"];
	
	for ( var i in buttons )	{
		$(contentDivs[i]).hide();
		showAndHide(buttons[i],contentDivs[i]);
		$(buttons[i]).attr('style','color: #20D9EB;');	
	}
}

function showAndHide(button,content) {
	$(button).toggle(
	function() {
		$(content).slideUp(700).fadeIn(500);
		$(this).text("[-]");

	}, function() {
		$(content).slideDown(700).fadeOut(500);
		$(this).text("[+]");
	});
}

//If it's OK we chan redirect the browser
function loadingAjaxRedirect(what,urlType,url,theData,redirectUrl) {
	$(what).append('<div id="waiting" style="text-align: center;"><p> Loading..<img src="./images/ajax-loader.gif" /></p></div>');
	$.ajax({
		type: urlType,
		url: url,
		data: theData,
		success: function(msg){
			//now check if it's ok
			if (msg.substring(0,2) == "OK") {
				//if there was no error.. redirect to the redirectUrl
				$(window.location).attr('href', redirectUrl);
			} else { $('#waiting').hide(); bb.error(msg.substring(3)) }
		},
		error : function(whatWrong) { bb.error("There was an error while loading" + url) }
	});
}

//Load ajax sent from the browser
//the server must send an JS object(yes, it looks like JSON but it's generated by the server )
//Fixed firefox post bug with commands... just use the false caching:)
function loadingAjax(what,urlType,url,theData) {
	$(what).html('<div style="text-align: center;"><p> Loading..<img src="./images/ajax-loader.gif" /></p></div>');
	$.ajax({
		type: urlType,
		url: url,
		data: theData,
		contentType: 'text',
		success: function(msg){
			console.log(msg);
			eval(msg);
			
			if (serverObj.html) {
				$(what).html(serverObj.html);
			}
			
			 /* Notices, warnings, info & success messages
			  *
			  */
			if (serverObj.error) {
				/*
				 jQuery.each(serverObj.error, function(key, value) {
					bubble('error',value);	bb.error(value);
				 });
				 */
				bubble('error',serverObj.error);
				//bb.error(value);
			}
			if (serverObj.notice) {
				 jQuery.each(serverObj.notice, function(key, value) {
					bubble('notice',value); bb.info(value);
				 });
			}
			if (serverObj.warning) {
				 jQuery.each(serverObj.warning, function(key, value) {
					bubble('warning',value); bb.warn(value);
				 });
			}
			if (serverObj.success) {
				bubble('success',serverObj.success);	bb.debug(serverObj.success);
			}
			if (serverObj.title) {
				
			}
				
		},
		error : function(whatWrong) { bubble('error',"There was an error while loading" + whatWrong ) }
	});
}

function theAjax(what,urlType,url,theData) {
	var xmlhttp;
	if (window.XMLHttpRequest)  { // code for IE7+, Firefox, Chrome, Opera, Safari
		xmlhttp=new XMLHttpRequest();
	}
	else  { // code for IE6, IE5
		xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
	}
	xmlhttp.onreadystatechange=function()	  {
	  if (xmlhttp.readyState==4 && xmlhttp.status==200)		{
		  var msg = xmlhttp.responseText;
			eval(msg);
			if (serverObj.html) {
				$(what).html(serverObj.html);
			}
		}
	  }
	xmlhttp.open(urlType,url,true);
	xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	xmlhttp.setRequestHeader("Content-length", theData.length);
	//xmlhttp.setRequestHeader("Connection", "close");
	xmlhttp.send(theData);
}
function postAjax() {
	$.post('ajax/test.html', function(data) {
	  $('.result').html(data);
	});

}
/*
 if (msg.substring(0,2) == "OK") {
				$(what).html(msg.substring(3))
			} else { eval(msg.substring(3)) }
		}
*/
/* Bubble functions
 * notice, warning, error, success
 */
function bubble (btype,theText,time) {
	if (!time) { var time = 7000 }
	$().toastmessage('showToast', {
		text : theText,
		position : 'top-right',
		type     : btype,
		stayTime : 	time,
	});
}

function stickyBubble (btype,theText) {
	$().toastmessage('showToast', {
		text : theText,
		position : 'top-right',
		type     : btype,
		sticky: true,
	});
}


/* Form visualisations
 *
 */
function regToNextStep() {
	//this is how to search for an atribute and it's def
	$('[href$="#tabs-2"]').click();
}
//$("#progressbar div").attr("style",$("#progressbar div").attr("style") + "background:lightgreen;");
/* validation stuff */
function validateForm(form,errorContainer) {
	// initialize validator with the new effect
	$(form).validator({
	   effect: 'wall', 
	   container: errorContainer,
	   
	   // do not validate inputs when they are edited
	   errorInputEvent: null
	   
	// custom form submission logic  
	}).submit(function(e)  { 
	   
	   // when data is valid 
	   if (!e.isDefaultPrevented()) {
		  
		  // tell user that everything is OK
		 $(errorContainer).html("<h2>All good</h2>");
		  
		  // prevent the form data being submitted to the server
		  e.preventDefault();
	   } 
	   
	});
}
// adds an effect called "wall" to the validator
$.tools.validator.addEffect("wall", function(errors, event) {

	// get the message wall
	var wall = $(this.getConf().container).fadeIn();
	
	// remove all existing messages
	$.each(wall, function(i) {
		$().toastmessage('removeToast', i);
	})
	
	// add new ones
	$.each(errors, function(index, error) {
		
		wall.push(bubble('error',error.messages[0]));		
	});
	
// the effect does nothing when all inputs are valid	
}, function(inputs)  {
	
});


//Player functions
		function playerProfiles() {
			var playerProfile = $('.player-profile');
			playerProfile.qtip({
			   content: {
				   title: {
					   text: 'Profile for  ' + playerProfile.attr('username'), // Give the tooltip a title using each elements text
					   button: 'Close' // Show a close link in the title
					},
				  url: 'profile.ws3',
				  data: { ApocalYpsE: 'ajaxVersion', userID: playerProfile.attr('userid') },
				  method: 'get'
			   },
			
			   style: { 
				  name: 'dark' // Inherit from preset style
				  
			   },
			    position: {
				  corner: {
					 tooltip: 'center'
				  }
			  },
				hide: { when: 'mouseout', fixed: true }
			});
		}
